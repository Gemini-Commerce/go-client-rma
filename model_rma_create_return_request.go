/*
RMA Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rma

import (
	"encoding/json"
	"fmt"
)

// checks if the RmaCreateReturnRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RmaCreateReturnRequest{}

// RmaCreateReturnRequest struct for RmaCreateReturnRequest
type RmaCreateReturnRequest struct {
	TenantId string `json:"tenantId"`
	OrderGrn string `json:"orderGrn"`
	Products []CreateReturnRequestProduct `json:"products"`
	PreferredRefundMethod RmaRefundMethod `json:"preferredRefundMethod"`
	RefundShippingCost *bool `json:"refundShippingCost,omitempty"`
	RefundPaymentCost *bool `json:"refundPaymentCost,omitempty"`
	CustomerInfo *RmaCustomerInfo `json:"customerInfo,omitempty"`
	ReturnAddress *RmaPostalAddress `json:"returnAddress,omitempty"`
	Note *string `json:"note,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _RmaCreateReturnRequest RmaCreateReturnRequest

// NewRmaCreateReturnRequest instantiates a new RmaCreateReturnRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRmaCreateReturnRequest(tenantId string, orderGrn string, products []CreateReturnRequestProduct, preferredRefundMethod RmaRefundMethod) *RmaCreateReturnRequest {
	this := RmaCreateReturnRequest{}
	this.TenantId = tenantId
	this.OrderGrn = orderGrn
	this.Products = products
	this.PreferredRefundMethod = preferredRefundMethod
	return &this
}

// NewRmaCreateReturnRequestWithDefaults instantiates a new RmaCreateReturnRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRmaCreateReturnRequestWithDefaults() *RmaCreateReturnRequest {
	this := RmaCreateReturnRequest{}
	var preferredRefundMethod RmaRefundMethod = RMAREFUNDMETHOD_UNKNOWN
	this.PreferredRefundMethod = preferredRefundMethod
	return &this
}

// GetTenantId returns the TenantId field value
func (o *RmaCreateReturnRequest) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *RmaCreateReturnRequest) SetTenantId(v string) {
	o.TenantId = v
}

// GetOrderGrn returns the OrderGrn field value
func (o *RmaCreateReturnRequest) GetOrderGrn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrderGrn
}

// GetOrderGrnOk returns a tuple with the OrderGrn field value
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetOrderGrnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderGrn, true
}

// SetOrderGrn sets field value
func (o *RmaCreateReturnRequest) SetOrderGrn(v string) {
	o.OrderGrn = v
}

// GetProducts returns the Products field value
func (o *RmaCreateReturnRequest) GetProducts() []CreateReturnRequestProduct {
	if o == nil {
		var ret []CreateReturnRequestProduct
		return ret
	}

	return o.Products
}

// GetProductsOk returns a tuple with the Products field value
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetProductsOk() ([]CreateReturnRequestProduct, bool) {
	if o == nil {
		return nil, false
	}
	return o.Products, true
}

// SetProducts sets field value
func (o *RmaCreateReturnRequest) SetProducts(v []CreateReturnRequestProduct) {
	o.Products = v
}

// GetPreferredRefundMethod returns the PreferredRefundMethod field value
func (o *RmaCreateReturnRequest) GetPreferredRefundMethod() RmaRefundMethod {
	if o == nil {
		var ret RmaRefundMethod
		return ret
	}

	return o.PreferredRefundMethod
}

// GetPreferredRefundMethodOk returns a tuple with the PreferredRefundMethod field value
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetPreferredRefundMethodOk() (*RmaRefundMethod, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PreferredRefundMethod, true
}

// SetPreferredRefundMethod sets field value
func (o *RmaCreateReturnRequest) SetPreferredRefundMethod(v RmaRefundMethod) {
	o.PreferredRefundMethod = v
}

// GetRefundShippingCost returns the RefundShippingCost field value if set, zero value otherwise.
func (o *RmaCreateReturnRequest) GetRefundShippingCost() bool {
	if o == nil || IsNil(o.RefundShippingCost) {
		var ret bool
		return ret
	}
	return *o.RefundShippingCost
}

// GetRefundShippingCostOk returns a tuple with the RefundShippingCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetRefundShippingCostOk() (*bool, bool) {
	if o == nil || IsNil(o.RefundShippingCost) {
		return nil, false
	}
	return o.RefundShippingCost, true
}

// HasRefundShippingCost returns a boolean if a field has been set.
func (o *RmaCreateReturnRequest) HasRefundShippingCost() bool {
	if o != nil && !IsNil(o.RefundShippingCost) {
		return true
	}

	return false
}

// SetRefundShippingCost gets a reference to the given bool and assigns it to the RefundShippingCost field.
func (o *RmaCreateReturnRequest) SetRefundShippingCost(v bool) {
	o.RefundShippingCost = &v
}

// GetRefundPaymentCost returns the RefundPaymentCost field value if set, zero value otherwise.
func (o *RmaCreateReturnRequest) GetRefundPaymentCost() bool {
	if o == nil || IsNil(o.RefundPaymentCost) {
		var ret bool
		return ret
	}
	return *o.RefundPaymentCost
}

// GetRefundPaymentCostOk returns a tuple with the RefundPaymentCost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetRefundPaymentCostOk() (*bool, bool) {
	if o == nil || IsNil(o.RefundPaymentCost) {
		return nil, false
	}
	return o.RefundPaymentCost, true
}

// HasRefundPaymentCost returns a boolean if a field has been set.
func (o *RmaCreateReturnRequest) HasRefundPaymentCost() bool {
	if o != nil && !IsNil(o.RefundPaymentCost) {
		return true
	}

	return false
}

// SetRefundPaymentCost gets a reference to the given bool and assigns it to the RefundPaymentCost field.
func (o *RmaCreateReturnRequest) SetRefundPaymentCost(v bool) {
	o.RefundPaymentCost = &v
}

// GetCustomerInfo returns the CustomerInfo field value if set, zero value otherwise.
func (o *RmaCreateReturnRequest) GetCustomerInfo() RmaCustomerInfo {
	if o == nil || IsNil(o.CustomerInfo) {
		var ret RmaCustomerInfo
		return ret
	}
	return *o.CustomerInfo
}

// GetCustomerInfoOk returns a tuple with the CustomerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetCustomerInfoOk() (*RmaCustomerInfo, bool) {
	if o == nil || IsNil(o.CustomerInfo) {
		return nil, false
	}
	return o.CustomerInfo, true
}

// HasCustomerInfo returns a boolean if a field has been set.
func (o *RmaCreateReturnRequest) HasCustomerInfo() bool {
	if o != nil && !IsNil(o.CustomerInfo) {
		return true
	}

	return false
}

// SetCustomerInfo gets a reference to the given RmaCustomerInfo and assigns it to the CustomerInfo field.
func (o *RmaCreateReturnRequest) SetCustomerInfo(v RmaCustomerInfo) {
	o.CustomerInfo = &v
}

// GetReturnAddress returns the ReturnAddress field value if set, zero value otherwise.
func (o *RmaCreateReturnRequest) GetReturnAddress() RmaPostalAddress {
	if o == nil || IsNil(o.ReturnAddress) {
		var ret RmaPostalAddress
		return ret
	}
	return *o.ReturnAddress
}

// GetReturnAddressOk returns a tuple with the ReturnAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetReturnAddressOk() (*RmaPostalAddress, bool) {
	if o == nil || IsNil(o.ReturnAddress) {
		return nil, false
	}
	return o.ReturnAddress, true
}

// HasReturnAddress returns a boolean if a field has been set.
func (o *RmaCreateReturnRequest) HasReturnAddress() bool {
	if o != nil && !IsNil(o.ReturnAddress) {
		return true
	}

	return false
}

// SetReturnAddress gets a reference to the given RmaPostalAddress and assigns it to the ReturnAddress field.
func (o *RmaCreateReturnRequest) SetReturnAddress(v RmaPostalAddress) {
	o.ReturnAddress = &v
}

// GetNote returns the Note field value if set, zero value otherwise.
func (o *RmaCreateReturnRequest) GetNote() string {
	if o == nil || IsNil(o.Note) {
		var ret string
		return ret
	}
	return *o.Note
}

// GetNoteOk returns a tuple with the Note field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RmaCreateReturnRequest) GetNoteOk() (*string, bool) {
	if o == nil || IsNil(o.Note) {
		return nil, false
	}
	return o.Note, true
}

// HasNote returns a boolean if a field has been set.
func (o *RmaCreateReturnRequest) HasNote() bool {
	if o != nil && !IsNil(o.Note) {
		return true
	}

	return false
}

// SetNote gets a reference to the given string and assigns it to the Note field.
func (o *RmaCreateReturnRequest) SetNote(v string) {
	o.Note = &v
}

func (o RmaCreateReturnRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RmaCreateReturnRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["orderGrn"] = o.OrderGrn
	toSerialize["products"] = o.Products
	toSerialize["preferredRefundMethod"] = o.PreferredRefundMethod
	if !IsNil(o.RefundShippingCost) {
		toSerialize["refundShippingCost"] = o.RefundShippingCost
	}
	if !IsNil(o.RefundPaymentCost) {
		toSerialize["refundPaymentCost"] = o.RefundPaymentCost
	}
	if !IsNil(o.CustomerInfo) {
		toSerialize["customerInfo"] = o.CustomerInfo
	}
	if !IsNil(o.ReturnAddress) {
		toSerialize["returnAddress"] = o.ReturnAddress
	}
	if !IsNil(o.Note) {
		toSerialize["note"] = o.Note
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *RmaCreateReturnRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"orderGrn",
		"products",
		"preferredRefundMethod",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRmaCreateReturnRequest := _RmaCreateReturnRequest{}

	err = json.Unmarshal(data, &varRmaCreateReturnRequest)

	if err != nil {
		return err
	}

	*o = RmaCreateReturnRequest(varRmaCreateReturnRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tenantId")
		delete(additionalProperties, "orderGrn")
		delete(additionalProperties, "products")
		delete(additionalProperties, "preferredRefundMethod")
		delete(additionalProperties, "refundShippingCost")
		delete(additionalProperties, "refundPaymentCost")
		delete(additionalProperties, "customerInfo")
		delete(additionalProperties, "returnAddress")
		delete(additionalProperties, "note")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

// GetValue returns the value of well-known types
func (o *RmaCreateReturnRequest) GetValue() interface{} {
	if o == nil || IsNil(o.Type) || IsNil(o.AdditionalProperties) {
		return nil
	}
	return o.AdditionalProperties["value"]
}
// SetValue populate the value of well-known types
func (o *RmaCreateReturnRequest) SetValue(value interface{}) {
	if o == nil || IsNil(o.Type) || IsNil(value) {
		return
	}
    if IsNil(o.AdditionalProperties) {
        o.AdditionalProperties = map[string]interface{}{}
    }
	o.AdditionalProperties["value"] = value
	return
}
type NullableRmaCreateReturnRequest struct {
	value *RmaCreateReturnRequest
	isSet bool
}

func (v NullableRmaCreateReturnRequest) Get() *RmaCreateReturnRequest {
	return v.value
}

func (v *NullableRmaCreateReturnRequest) Set(val *RmaCreateReturnRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRmaCreateReturnRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRmaCreateReturnRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRmaCreateReturnRequest(val *RmaCreateReturnRequest) *NullableRmaCreateReturnRequest {
	return &NullableRmaCreateReturnRequest{value: val, isSet: true}
}

func (v NullableRmaCreateReturnRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRmaCreateReturnRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


