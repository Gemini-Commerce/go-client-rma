/*
RMA Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rma

import (
	"encoding/json"
	"fmt"
)

// RmaListReturnsRequestSortSortField the model 'RmaListReturnsRequestSortSortField'
type RmaListReturnsRequestSortSortField string

// List of rmaListReturnsRequestSortSortField
const (
	RMALISTRETURNSREQUESTSORTSORTFIELD_UNKNOWN RmaListReturnsRequestSortSortField = "UNKNOWN"
	RMALISTRETURNSREQUESTSORTSORTFIELD_DATE    RmaListReturnsRequestSortSortField = "DATE"
)

// All allowed values of RmaListReturnsRequestSortSortField enum
var AllowedRmaListReturnsRequestSortSortFieldEnumValues = []RmaListReturnsRequestSortSortField{
	"UNKNOWN",
	"DATE",
}

func (v *RmaListReturnsRequestSortSortField) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RmaListReturnsRequestSortSortField(value)
	for _, existing := range AllowedRmaListReturnsRequestSortSortFieldEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RmaListReturnsRequestSortSortField", value)
}

// NewRmaListReturnsRequestSortSortFieldFromValue returns a pointer to a valid RmaListReturnsRequestSortSortField
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRmaListReturnsRequestSortSortFieldFromValue(v string) (*RmaListReturnsRequestSortSortField, error) {
	ev := RmaListReturnsRequestSortSortField(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RmaListReturnsRequestSortSortField: valid values are %v", v, AllowedRmaListReturnsRequestSortSortFieldEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RmaListReturnsRequestSortSortField) IsValid() bool {
	for _, existing := range AllowedRmaListReturnsRequestSortSortFieldEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to rmaListReturnsRequestSortSortField value
func (v RmaListReturnsRequestSortSortField) Ptr() *RmaListReturnsRequestSortSortField {
	return &v
}

type NullableRmaListReturnsRequestSortSortField struct {
	value *RmaListReturnsRequestSortSortField
	isSet bool
}

func (v NullableRmaListReturnsRequestSortSortField) Get() *RmaListReturnsRequestSortSortField {
	return v.value
}

func (v *NullableRmaListReturnsRequestSortSortField) Set(val *RmaListReturnsRequestSortSortField) {
	v.value = val
	v.isSet = true
}

func (v NullableRmaListReturnsRequestSortSortField) IsSet() bool {
	return v.isSet
}

func (v *NullableRmaListReturnsRequestSortSortField) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRmaListReturnsRequestSortSortField(val *RmaListReturnsRequestSortSortField) *NullableRmaListReturnsRequestSortSortField {
	return &NullableRmaListReturnsRequestSortSortField{value: val, isSet: true}
}

func (v NullableRmaListReturnsRequestSortSortField) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRmaListReturnsRequestSortSortField) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
