/*
RMA Service

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1
Contact: info@gemini-commerce.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package rma

import (
	"encoding/json"
	"fmt"
)

// RmaCurrency Stands for Albania, not all ;-)
type RmaCurrency string

// List of rmaCurrency
const (
	RMACURRENCY_XXX RmaCurrency = "XXX"
	RMACURRENCY_ALL RmaCurrency = "ALL"
	RMACURRENCY_DZD RmaCurrency = "DZD"
	RMACURRENCY_ARS RmaCurrency = "ARS"
	RMACURRENCY_AUD RmaCurrency = "AUD"
	RMACURRENCY_BSD RmaCurrency = "BSD"
	RMACURRENCY_BHD RmaCurrency = "BHD"
	RMACURRENCY_BDT RmaCurrency = "BDT"
	RMACURRENCY_AMD RmaCurrency = "AMD"
	RMACURRENCY_BBD RmaCurrency = "BBD"
	RMACURRENCY_BMD RmaCurrency = "BMD"
	RMACURRENCY_BTN RmaCurrency = "BTN"
	RMACURRENCY_BOB RmaCurrency = "BOB"
	RMACURRENCY_BWP RmaCurrency = "BWP"
	RMACURRENCY_BZD RmaCurrency = "BZD"
	RMACURRENCY_SBD RmaCurrency = "SBD"
	RMACURRENCY_BND RmaCurrency = "BND"
	RMACURRENCY_MMK RmaCurrency = "MMK"
	RMACURRENCY_BIF RmaCurrency = "BIF"
	RMACURRENCY_KHR RmaCurrency = "KHR"
	RMACURRENCY_CAD RmaCurrency = "CAD"
	RMACURRENCY_CVE RmaCurrency = "CVE"
	RMACURRENCY_KYD RmaCurrency = "KYD"
	RMACURRENCY_LKR RmaCurrency = "LKR"
	RMACURRENCY_CLP RmaCurrency = "CLP"
	RMACURRENCY_CNY RmaCurrency = "CNY"
	RMACURRENCY_COP RmaCurrency = "COP"
	RMACURRENCY_KMF RmaCurrency = "KMF"
	RMACURRENCY_CRC RmaCurrency = "CRC"
	RMACURRENCY_HRK RmaCurrency = "HRK"
	RMACURRENCY_CUP RmaCurrency = "CUP"
	RMACURRENCY_CZK RmaCurrency = "CZK"
	RMACURRENCY_DKK RmaCurrency = "DKK"
	RMACURRENCY_DOP RmaCurrency = "DOP"
	RMACURRENCY_SVC RmaCurrency = "SVC"
	RMACURRENCY_ETB RmaCurrency = "ETB"
	RMACURRENCY_ERN RmaCurrency = "ERN"
	RMACURRENCY_FKP RmaCurrency = "FKP"
	RMACURRENCY_FJD RmaCurrency = "FJD"
	RMACURRENCY_DJF RmaCurrency = "DJF"
	RMACURRENCY_GMD RmaCurrency = "GMD"
	RMACURRENCY_GIP RmaCurrency = "GIP"
	RMACURRENCY_GTQ RmaCurrency = "GTQ"
	RMACURRENCY_GNF RmaCurrency = "GNF"
	RMACURRENCY_GYD RmaCurrency = "GYD"
	RMACURRENCY_HTG RmaCurrency = "HTG"
	RMACURRENCY_HNL RmaCurrency = "HNL"
	RMACURRENCY_HKD RmaCurrency = "HKD"
	RMACURRENCY_HUF RmaCurrency = "HUF"
	RMACURRENCY_ISK RmaCurrency = "ISK"
	RMACURRENCY_INR RmaCurrency = "INR"
	RMACURRENCY_IDR RmaCurrency = "IDR"
	RMACURRENCY_IRR RmaCurrency = "IRR"
	RMACURRENCY_IQD RmaCurrency = "IQD"
	RMACURRENCY_ILS RmaCurrency = "ILS"
	RMACURRENCY_JMD RmaCurrency = "JMD"
	RMACURRENCY_JPY RmaCurrency = "JPY"
	RMACURRENCY_KZT RmaCurrency = "KZT"
	RMACURRENCY_JOD RmaCurrency = "JOD"
	RMACURRENCY_KES RmaCurrency = "KES"
	RMACURRENCY_KPW RmaCurrency = "KPW"
	RMACURRENCY_KRW RmaCurrency = "KRW"
	RMACURRENCY_KWD RmaCurrency = "KWD"
	RMACURRENCY_KGS RmaCurrency = "KGS"
	RMACURRENCY_LAK RmaCurrency = "LAK"
	RMACURRENCY_LBP RmaCurrency = "LBP"
	RMACURRENCY_LSL RmaCurrency = "LSL"
	RMACURRENCY_LRD RmaCurrency = "LRD"
	RMACURRENCY_LYD RmaCurrency = "LYD"
	RMACURRENCY_LTL RmaCurrency = "LTL"
	RMACURRENCY_MOP RmaCurrency = "MOP"
	RMACURRENCY_MWK RmaCurrency = "MWK"
	RMACURRENCY_MYR RmaCurrency = "MYR"
	RMACURRENCY_MVR RmaCurrency = "MVR"
	RMACURRENCY_MRO RmaCurrency = "MRO"
	RMACURRENCY_MUR RmaCurrency = "MUR"
	RMACURRENCY_MXN RmaCurrency = "MXN"
	RMACURRENCY_MNT RmaCurrency = "MNT"
	RMACURRENCY_MDL RmaCurrency = "MDL"
	RMACURRENCY_MAD RmaCurrency = "MAD"
	RMACURRENCY_OMR RmaCurrency = "OMR"
	RMACURRENCY_NAD RmaCurrency = "NAD"
	RMACURRENCY_NPR RmaCurrency = "NPR"
	RMACURRENCY_ANG RmaCurrency = "ANG"
	RMACURRENCY_AWG RmaCurrency = "AWG"
	RMACURRENCY_VUV RmaCurrency = "VUV"
	RMACURRENCY_NZD RmaCurrency = "NZD"
	RMACURRENCY_NIO RmaCurrency = "NIO"
	RMACURRENCY_NGN RmaCurrency = "NGN"
	RMACURRENCY_NOK RmaCurrency = "NOK"
	RMACURRENCY_PKR RmaCurrency = "PKR"
	RMACURRENCY_PAB RmaCurrency = "PAB"
	RMACURRENCY_PGK RmaCurrency = "PGK"
	RMACURRENCY_PYG RmaCurrency = "PYG"
	RMACURRENCY_PEN RmaCurrency = "PEN"
	RMACURRENCY_PHP RmaCurrency = "PHP"
	RMACURRENCY_QAR RmaCurrency = "QAR"
	RMACURRENCY_RUB RmaCurrency = "RUB"
	RMACURRENCY_RWF RmaCurrency = "RWF"
	RMACURRENCY_SHP RmaCurrency = "SHP"
	RMACURRENCY_STD RmaCurrency = "STD"
	RMACURRENCY_SAR RmaCurrency = "SAR"
	RMACURRENCY_SCR RmaCurrency = "SCR"
	RMACURRENCY_SLL RmaCurrency = "SLL"
	RMACURRENCY_SGD RmaCurrency = "SGD"
	RMACURRENCY_VND RmaCurrency = "VND"
	RMACURRENCY_SOS RmaCurrency = "SOS"
	RMACURRENCY_ZAR RmaCurrency = "ZAR"
	RMACURRENCY_SSP RmaCurrency = "SSP"
	RMACURRENCY_SZL RmaCurrency = "SZL"
	RMACURRENCY_SEK RmaCurrency = "SEK"
	RMACURRENCY_CHF RmaCurrency = "CHF"
	RMACURRENCY_SYP RmaCurrency = "SYP"
	RMACURRENCY_THB RmaCurrency = "THB"
	RMACURRENCY_TOP RmaCurrency = "TOP"
	RMACURRENCY_TTD RmaCurrency = "TTD"
	RMACURRENCY_AED RmaCurrency = "AED"
	RMACURRENCY_TND RmaCurrency = "TND"
	RMACURRENCY_UGX RmaCurrency = "UGX"
	RMACURRENCY_MKD RmaCurrency = "MKD"
	RMACURRENCY_EGP RmaCurrency = "EGP"
	RMACURRENCY_GBP RmaCurrency = "GBP"
	RMACURRENCY_TZS RmaCurrency = "TZS"
	RMACURRENCY_USD RmaCurrency = "USD"
	RMACURRENCY_UYU RmaCurrency = "UYU"
	RMACURRENCY_UZS RmaCurrency = "UZS"
	RMACURRENCY_WST RmaCurrency = "WST"
	RMACURRENCY_YER RmaCurrency = "YER"
	RMACURRENCY_TWD RmaCurrency = "TWD"
	RMACURRENCY_CUC RmaCurrency = "CUC"
	RMACURRENCY_ZWL RmaCurrency = "ZWL"
	RMACURRENCY_TMT RmaCurrency = "TMT"
	RMACURRENCY_GHS RmaCurrency = "GHS"
	RMACURRENCY_VEF RmaCurrency = "VEF"
	RMACURRENCY_SDG RmaCurrency = "SDG"
	RMACURRENCY_UYI RmaCurrency = "UYI"
	RMACURRENCY_RSD RmaCurrency = "RSD"
	RMACURRENCY_MZN RmaCurrency = "MZN"
	RMACURRENCY_AZN RmaCurrency = "AZN"
	RMACURRENCY_RON RmaCurrency = "RON"
	RMACURRENCY_CHE RmaCurrency = "CHE"
	RMACURRENCY_CHW RmaCurrency = "CHW"
	RMACURRENCY_TRY RmaCurrency = "TRY"
	RMACURRENCY_XAF RmaCurrency = "XAF"
	RMACURRENCY_XCD RmaCurrency = "XCD"
	RMACURRENCY_XOF RmaCurrency = "XOF"
	RMACURRENCY_XPF RmaCurrency = "XPF"
	RMACURRENCY_XBA RmaCurrency = "XBA"
	RMACURRENCY_XBB RmaCurrency = "XBB"
	RMACURRENCY_XBC RmaCurrency = "XBC"
	RMACURRENCY_XBD RmaCurrency = "XBD"
	RMACURRENCY_XAU RmaCurrency = "XAU"
	RMACURRENCY_XDR RmaCurrency = "XDR"
	RMACURRENCY_XAG RmaCurrency = "XAG"
	RMACURRENCY_XPT RmaCurrency = "XPT"
	RMACURRENCY_XPD RmaCurrency = "XPD"
	RMACURRENCY_XUA RmaCurrency = "XUA"
	RMACURRENCY_ZMW RmaCurrency = "ZMW"
	RMACURRENCY_SRD RmaCurrency = "SRD"
	RMACURRENCY_MGA RmaCurrency = "MGA"
	RMACURRENCY_COU RmaCurrency = "COU"
	RMACURRENCY_AFN RmaCurrency = "AFN"
	RMACURRENCY_TJS RmaCurrency = "TJS"
	RMACURRENCY_AOA RmaCurrency = "AOA"
	RMACURRENCY_BYR RmaCurrency = "BYR"
	RMACURRENCY_BGN RmaCurrency = "BGN"
	RMACURRENCY_CDF RmaCurrency = "CDF"
	RMACURRENCY_BAM RmaCurrency = "BAM"
	RMACURRENCY_EUR RmaCurrency = "EUR"
	RMACURRENCY_MXV RmaCurrency = "MXV"
	RMACURRENCY_UAH RmaCurrency = "UAH"
	RMACURRENCY_GEL RmaCurrency = "GEL"
	RMACURRENCY_BOV RmaCurrency = "BOV"
	RMACURRENCY_PLN RmaCurrency = "PLN"
	RMACURRENCY_BRL RmaCurrency = "BRL"
	RMACURRENCY_CLF RmaCurrency = "CLF"
	RMACURRENCY_XSU RmaCurrency = "XSU"
	RMACURRENCY_USN RmaCurrency = "USN"
)

// All allowed values of RmaCurrency enum
var AllowedRmaCurrencyEnumValues = []RmaCurrency{
	"XXX",
	"ALL",
	"DZD",
	"ARS",
	"AUD",
	"BSD",
	"BHD",
	"BDT",
	"AMD",
	"BBD",
	"BMD",
	"BTN",
	"BOB",
	"BWP",
	"BZD",
	"SBD",
	"BND",
	"MMK",
	"BIF",
	"KHR",
	"CAD",
	"CVE",
	"KYD",
	"LKR",
	"CLP",
	"CNY",
	"COP",
	"KMF",
	"CRC",
	"HRK",
	"CUP",
	"CZK",
	"DKK",
	"DOP",
	"SVC",
	"ETB",
	"ERN",
	"FKP",
	"FJD",
	"DJF",
	"GMD",
	"GIP",
	"GTQ",
	"GNF",
	"GYD",
	"HTG",
	"HNL",
	"HKD",
	"HUF",
	"ISK",
	"INR",
	"IDR",
	"IRR",
	"IQD",
	"ILS",
	"JMD",
	"JPY",
	"KZT",
	"JOD",
	"KES",
	"KPW",
	"KRW",
	"KWD",
	"KGS",
	"LAK",
	"LBP",
	"LSL",
	"LRD",
	"LYD",
	"LTL",
	"MOP",
	"MWK",
	"MYR",
	"MVR",
	"MRO",
	"MUR",
	"MXN",
	"MNT",
	"MDL",
	"MAD",
	"OMR",
	"NAD",
	"NPR",
	"ANG",
	"AWG",
	"VUV",
	"NZD",
	"NIO",
	"NGN",
	"NOK",
	"PKR",
	"PAB",
	"PGK",
	"PYG",
	"PEN",
	"PHP",
	"QAR",
	"RUB",
	"RWF",
	"SHP",
	"STD",
	"SAR",
	"SCR",
	"SLL",
	"SGD",
	"VND",
	"SOS",
	"ZAR",
	"SSP",
	"SZL",
	"SEK",
	"CHF",
	"SYP",
	"THB",
	"TOP",
	"TTD",
	"AED",
	"TND",
	"UGX",
	"MKD",
	"EGP",
	"GBP",
	"TZS",
	"USD",
	"UYU",
	"UZS",
	"WST",
	"YER",
	"TWD",
	"CUC",
	"ZWL",
	"TMT",
	"GHS",
	"VEF",
	"SDG",
	"UYI",
	"RSD",
	"MZN",
	"AZN",
	"RON",
	"CHE",
	"CHW",
	"TRY",
	"XAF",
	"XCD",
	"XOF",
	"XPF",
	"XBA",
	"XBB",
	"XBC",
	"XBD",
	"XAU",
	"XDR",
	"XAG",
	"XPT",
	"XPD",
	"XUA",
	"ZMW",
	"SRD",
	"MGA",
	"COU",
	"AFN",
	"TJS",
	"AOA",
	"BYR",
	"BGN",
	"CDF",
	"BAM",
	"EUR",
	"MXV",
	"UAH",
	"GEL",
	"BOV",
	"PLN",
	"BRL",
	"CLF",
	"XSU",
	"USN",
}

func (v *RmaCurrency) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RmaCurrency(value)
	for _, existing := range AllowedRmaCurrencyEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RmaCurrency", value)
}

// NewRmaCurrencyFromValue returns a pointer to a valid RmaCurrency
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRmaCurrencyFromValue(v string) (*RmaCurrency, error) {
	ev := RmaCurrency(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RmaCurrency: valid values are %v", v, AllowedRmaCurrencyEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RmaCurrency) IsValid() bool {
	for _, existing := range AllowedRmaCurrencyEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to rmaCurrency value
func (v RmaCurrency) Ptr() *RmaCurrency {
	return &v
}

type NullableRmaCurrency struct {
	value *RmaCurrency
	isSet bool
}

func (v NullableRmaCurrency) Get() *RmaCurrency {
	return v.value
}

func (v *NullableRmaCurrency) Set(val *RmaCurrency) {
	v.value = val
	v.isSet = true
}

func (v NullableRmaCurrency) IsSet() bool {
	return v.isSet
}

func (v *NullableRmaCurrency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRmaCurrency(val *RmaCurrency) *NullableRmaCurrency {
	return &NullableRmaCurrency{value: val, isSet: true}
}

func (v NullableRmaCurrency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRmaCurrency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

